DROP FUNCTION FUN_CALCULARJUGADORES;
DROP FUNCTION PROC_VERMIEMBROSEQUIPO;
DROP FUNCTION PROC_REF_EQUIPO;
DROP PROCEDURE GENERAR_CALENDARIO;

SET SERVEROUTPUT ON

CREATE OR REPLACE FUNCTION FUN_CALCULARJUGADORES--ESTA FUNCION VA A CALCULAR EL NUMERO DE JUGADORES POR EQUIPO
    (EQUIPO_ID IN EQUIPO.COD_EQUIPO%TYPE) --VARIABLE EN LA CUAL GUARDAMOS EL CODIGO DEL EQUIPO
RETURN NUMBER AS
    MIEMBROS NUMBER; --CREACION VARIABLE TIPO NUMBER
BEGIN
    SELECT COUNT(*) INTO MIEMBROS --SELECT PARA CONTAR EL NUMERO DE JUGADORES POR EQUIPO
      FROM JUGADOR
      WHERE  EQUIPO_COD_EQUIPO = EQUIPO_ID;
    RETURN(MIEMBROS); --RETORNAMOS LA VARIABLE NUMBER
END FUN_CALCULARJUGADORES;

/

CREATE OR REPLACE PROCEDURE PROC_VERMIEMBROSEQUIPO --PROCEDIMIENTO CON EL CUAL MOSTRAMOS LOS JUGADORES DE CADA EQUIPO UTILIZANDO
AS --LA FUNCION CREADA ANTERIORMENTE: FUN_CALCULARJUGADORES // EN EL CASO DE QUE NO TENGA JUGADORES MOSTRARA LA CANTIDAD DE 0
    MIEMBROS NUMBER;
BEGIN 
    MIEMBROS := FUN_CALCULARJUGADORES(02); --GUARDAMOS LA FUNCION ANTERIOR EN UNA VARIABLE Y EL CODGIO DEL EQUIPO QUE QUEREMOS MOSTRAR
    DBMS_OUTPUT.PUT_LINE('EL EQUIPO TIENE: '|| MIEMBROS || ' jugadores.' );
END PROC_VERMIEMBROSEQUIPO;

EXECUTE PROC_VERMIEMBROSEQUIPO; --EJECUTAMOS EL PROCEDIMIENTO

/

CREATE OR REPLACE PROCEDURE PROC_REF_EQUIPO --PROCEDIMIENTO PARA MOSTRAR LOS EQUIPOS SU DUEÑO Y LA CANTIDAD DE JUGADORES
  IS
  CURSOR CUR_EQUIPO IS --CURSOR DONDE GUARDAREMOS TODO
    SELECT E.COD_EQUIPO,E.NOMBRE,E.NACIONALIDAD,E.PRESUPUESTO,E.PUNTUACION,E.DUEÑO_COD_CUENTA"CODIGO_DUEÑO",C.NOMBRE"NOMBRE_DUEÑO",NVL(COUNT(J.COD_JUGADOR),0)"NUM_JUGADORES"
    FROM EQUIPO E,DUEÑO D,JUGADOR J,CUENTAS C
    WHERE E.COD_EQUIPO=J.EQUIPO_COD_EQUIPO(+)
    AND E.DUEÑO_COD_CUENTA(+)=D.COD_CUENTA
    AND D.COD_CUENTA(+)=C.COD_CUENTA 
    GROUP BY E.COD_EQUIPO, E.NOMBRE, E.NACIONALIDAD, E.PRESUPUESTO, E.PUNTUACION,E.DUEÑO_COD_CUENTA, C.NOMBRE;
    VREG CUR_EQUIPO%ROWTYPE;
 BEGIN      
  FOR VREG IN CUR_EQUIPO --PARA QUE MUESTRE TODOS LOS EQUIPOS Y NO SOLO 1
    LOOP
      DBMS_OUTPUT.PUT_LINE
        (VREG.COD_EQUIPO||' '||VREG.NOMBRE||' '||VREG.NACIONALIDAD||' '||VREG.PRESUPUESTO||' '||VREG.CODIGO_DUEÑO||' '||VREG.PUNTUACION||' '||VREG.NUM_JUGADORES||' '||VREG.NOMBRE_DUEÑO);
    END LOOP;
END PROC_REF_EQUIPO;

EXECUTE PROC_REF_EQUIPO;

/

CREATE OR REPLACE PROCEDURE GENERAR_CALENDARIO(FECHA_INICIO_LIGA DATE)
IS 
V_INICIO_JORNADA DATE;
V_FIN_JORNADA DATE;
V_CONTADOR NUMBER := 02;
BEGIN 
    IF FECHA_INICIO_LIGA < SYSDATE THEN
        RAISE_APPLICATION_ERROR(-20006,'LA LIGA NO PUEDE EMPEZAR ANTES DEL DIA DE HOY');
    END IF;
    INSERT INTO LIGA (FECHA_INICIO,COD_LIGA,NOMBRE,ESTADO) VALUES(FECHA_INICIO_LIGA,01,'HOLA',0); --INSERTAMOS LA FECHA DE INICIO DE LA LIGA
    INSERT INTO JORNADA (FECHA_INICIO,COD_JORNADA,LIGA_COD_LIGA) VALUES(FECHA_INICIO_LIGA,01,01); --INSERTAMOS LA PRIMERA JORANADA
    V_FIN_JORNADA := FECHA_INICIO_LIGA + 3; -- EL FINAL DE JORNADA SERA 3 DIAS DESPUES DEL INICO DE LA JORNADA
    V_INICIO_JORNADA := FECHA_INICIO_LIGA + 7; --LA SIGUIENTE JORNADA SERA 7 DIAS DESPUES DEL FINAL DE LA ANTERIOR JORNADA
    UPDATE JORNADA SET FECHA_FIN = V_FIN_JORNADA WHERE FECHA_INICIO = FECHA_INICIO_LIGA; --HACEMOS UPDATE DEL FIN DE LA JORNADA DEL INICIO DE LA JORNADA QUE VACIA
    LOOP
        INSERT INTO JORNADA (FECHA_INICIO,COD_JORNADA,LIGA_COD_LIGA) VALUES(V_INICIO_JORNADA,V_CONTADOR,01); --INSERTAMOS LA JORNADA X
        V_INICIO_JORNADA:= V_INICIO_JORNADA + 7; --LA SIGUIENTE JORNADA SERA 7 DIAS DESPUES DEL FINAL DE LA ANTERIOR JORNADA
        V_CONTADOR := V_CONTADOR + 1; --SUMAREMOS UNO A NUESTRO CONTADOR HASTA 11, QUE SON LAS JORNADAS QUE HABRA 
        EXIT WHEN V_CONTADOR = 11; --SALDREMOS DEL LOOP CUANDO EL CONTADOR ESTE EN 11
    END LOOP;
        V_CONTADOR:=02;
        V_FIN_JORNADA:= FECHA_INICIO_LIGA + 10; --LA SIGUIENTE JORNADA SERA 7 DIAS DESPUES DEL FINAL DE LA ANTERIOR JORNADA
    LOOP
        UPDATE JORNADA SET FECHA_FIN = V_FIN_JORNADA WHERE COD_JORNADA=V_CONTADOR; --HACEMOS UPDATE DEL FIN DE LA JORNADA DEL INICIO DE LA JORNADA QUE VACIA
        V_FIN_JORNADA:= V_FIN_JORNADA + 7; --LA SIGUIENTE JORNADA SERA 7 DIAS DESPUES DEL FINAL DE LA ANTERIOR JORNADA
        V_CONTADOR := V_CONTADOR + 1; --SUMAREMOS UNO A NUESTRO CONTADOR HASTA 11, QUE SON LAS JORNADAS QUE HABRA 
        EXIT WHEN V_CONTADOR = 11; --SALDREMOS DEL LOOP CUANDO EL CONTADOR ESTE EN 11
    END LOOP;
    UPDATE LIGA SET FECHA_FIN = V_FIN_JORNADA-7; --HACEMOS UPDATE DEL FIN DE LA LIGA QUE ESTA VACIA
END GENERAR_CALENDARIO;

EXECUTE GENERAR_CALENDARIO(SYSDATE); 
--COMPROBADORES DE QUE SE HA CREADO LA LIGA VACIA
SELECT * FROM JORNADA;
SELECT * FROM LIGA;