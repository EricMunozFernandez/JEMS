DROP FUNCTION FUN_CALCULARJUGADORES;
DROP FUNCTION PROC_VERMIEMBROSEQUIPO;
DROP FUNCTION PROC_REF_EQUIPO;
DROP PROCEDURE GENERAR_CALENDARIO;


CREATE OR REPLACE FUNCTION FUN_CALCULARJUGADORES--ESTA FUNCION VA A CALCULAR EL NUMERO DE JUGADORES POR EQUIPO
    (EQUIPO_ID IN EQUIPO.COD_EQUIPO%TYPE) --VARIABLE EN LA CUAL GUARDAMOS EL CODIGO DEL EQUIPO
RETURN NUMBER AS
MIEMBROS NUMBER;
BEGIN
    SELECT NVL(COUNT(*),0) INTO MIEMBROS --SELECT PARA CONTAR EL NUMERO DE JUGADORES POR EQUIPO
      FROM JUGADOR
      WHERE  EQUIPO_COD_EQUIPO = EQUIPO_ID;
    RETURN(MIEMBROS); --RETORNAMOS LA VARIABLE NUMBER
END FUN_CALCULARJUGADORES;

/

CREATE OR REPLACE PROCEDURE PROC_VERMIEMBROSEQUIPO --PROCEDIMIENTO CON EL CUAL MOSTRAMOS LOS JUGADORES DE CADA EQUIPO UTILIZANDO
(P_EQUIPO_ID IN EQUIPO.COD_EQUIPO%TYPE, MIEMBROS OUT NUMBER)
AS --LA FUNCION CREADA ANTERIORMENTE: FUN_CALCULARJUGADORES // EN EL CASO DE QUE NO TENGA JUGADORES MOSTRARA LA CANTIDAD DE 0
BEGIN 
    MIEMBROS := FUN_CALCULARJUGADORES(P_EQUIPO_ID); --GUARDAMOS LA FUNCION ANTERIOR EN UNA VARIABLE Y EL CODGIO DEL EQUIPO QUE QUEREMOS MOSTRAR
END PROC_VERMIEMBROSEQUIPO;


/

CREATE OR REPLACE PROCEDURE PROC_REF_EQUIPO --PROCEDIMIENTO PARA MOSTRAR LOS EQUIPOS SU DUE�O Y LA CANTIDAD DE JUGADORES
(CUR_EQUIPO OUT SYS_REFCURSOR) 
IS
 BEGIN      
  OPEN CUR_EQUIPO FOR
    SELECT E.COD_EQUIPO,E.NOMBRE,E.NACIONALIDAD,E.PRESUPUESTO,E.PUNTUACION,E.DUE�O_COD_CUENTA"CODIGO_DUE�O",C.NOMBRE"NOMBRE_DUE�O",NVL(COUNT(J.COD_JUGADOR),0)"NUM_JUGADORES"
    FROM EQUIPO E,DUE�O D,JUGADOR J,CUENTAS C
    WHERE E.COD_EQUIPO=J.EQUIPO_COD_EQUIPO(+)
    AND E.DUE�O_COD_CUENTA(+)=D.COD_CUENTA
    AND D.COD_CUENTA(+)=C.COD_CUENTA 
    GROUP BY E.COD_EQUIPO, E.NOMBRE, E.NACIONALIDAD, E.PRESUPUESTO, E.PUNTUACION,E.DUE�O_COD_CUENTA, C.NOMBRE;
END PROC_REF_EQUIPO;


/

CREATE OR REPLACE PROCEDURE GENERAR_CALENDARIO(FECHA_INICIO_LIGA DATE)
IS 
V_INICIO_JORNADA DATE;
V_FIN_JORNADA DATE;
V_CONTADOR NUMBER := 00;
BEGIN 
    IF FECHA_INICIO_LIGA < SYSDATE THEN
        RAISE_APPLICATION_ERROR(-20006,'LA LIGA NO PUEDE EMPEZAR ANTES DEL DIA DE HOY');
    ELSE
        INSERT INTO LIGA (FECHA_INICIO,COD_LIGA,NOMBRE,ESTADO) 
        VALUES(FECHA_INICIO_LIGA,01,'HOLA',0); --INSERTAMOS LA FECHA DE INICIO DE LA LIGA
        INSERT INTO JORNADA (FECHA_INICIO,COD_JORNADA,LIGA_COD_LIGA) 
        VALUES(FECHA_INICIO_LIGA,AUTO_COD_JORNADA_SEQ.NEXTVAL,01); --INSERTAMOS LA PRIMERA JORANADA
        V_FIN_JORNADA := FECHA_INICIO_LIGA + 3; -- EL FINAL DE JORNADA SERA 3 DIAS DESPUES DEL INICO DE LA JORNADA
        V_INICIO_JORNADA := FECHA_INICIO_LIGA + 7; --LA SIGUIENTE JORNADA SERA 7 DIAS DESPUES DEL FINAL DE LA ANTERIOR JORNADA
        UPDATE JORNADA SET FECHA_FIN = V_FIN_JORNADA 
        WHERE FECHA_INICIO = FECHA_INICIO_LIGA; --HACEMOS UPDATE DEL FIN DE LA JORNADA DEL INICIO DE LA JORNADA QUE VACIA
        LOOP
            INSERT INTO JORNADA (FECHA_INICIO,COD_JORNADA,LIGA_COD_LIGA) 
            VALUES(V_INICIO_JORNADA,AUTO_COD_JORNADA_SEQ.NEXTVAL,01); --INSERTAMOS LA JORNADA X
            V_INICIO_JORNADA:= V_INICIO_JORNADA + 7; --LA SIGUIENTE JORNADA SERA 7 DIAS DESPUES DEL FINAL DE LA ANTERIOR JORNADA
            V_CONTADOR := V_CONTADOR + 1; --SUMAREMOS UNO A NUESTRO CONTADOR HASTA 10, QUE SON LAS JORNADAS QUE HABRA 
            EXIT WHEN V_CONTADOR = 10; --SALDREMOS DEL LOOP CUANDO EL CONTADOR ESTE EN 10
        END LOOP;
        V_CONTADOR:=02;
        V_FIN_JORNADA:= FECHA_INICIO_LIGA + 10; --LA SIGUIENTE JORNADA SERA 7 DIAS DESPUES DEL FINAL DE LA ANTERIOR JORNADA
        LOOP
            UPDATE JORNADA SET FECHA_FIN = V_FIN_JORNADA 
            WHERE COD_JORNADA=V_CONTADOR; --UPDATE PARA INSERTAR LA FECHA DEL FIN DE LA JORNADA
            V_FIN_JORNADA:= V_FIN_JORNADA + 7; --SACAR EL SIGUIENTE FIN DE JORNADA
            V_CONTADOR := V_CONTADOR + 1; --SUMAREMOS UNO A NUESTRO CONTADOR HASTA 10, QUE SON LAS JORNADAS QUE HABRA 
            EXIT WHEN V_CONTADOR = 10; --SALDREMOS DEL LOOP CUANDO EL CONTADOR ESTE EN 10
        END LOOP;
        UPDATE LIGA SET FECHA_FIN = V_FIN_JORNADA-7; --HACEMOS UPDATE DEL FIN DE LA LIGA QUE ESTA VACIA
    END IF;
END GENERAR_CALENDARIO;

