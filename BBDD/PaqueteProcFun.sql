
DROP FUNCTION FUN_CALCULARJUGADORES;
DROP PACKAGE PAQ_PROC_FUN;


CREATE OR REPLACE FUNCTION FUN_CALCULARJUGADORES--ESTA FUNCION VA A CALCULAR EL NUMERO DE JUGADORES POR EQUIPO
    (EQUIPO_ID IN EQUIPO.COD_EQUIPO%TYPE) --VARIABLE EN LA CUAL GUARDAMOS EL CODIGO DEL EQUIPO
RETURN NUMBER AS
MIEMBROS NUMBER;
BEGIN
    SELECT NVL(COUNT(*),0) INTO MIEMBROS --SELECT PARA CONTAR EL NUMERO DE JUGADORES POR EQUIPO
      FROM JUGADOR
      WHERE  EQUIPO_COD_EQUIPO = EQUIPO_ID;
    RETURN(MIEMBROS); --RETORNAMOS LA VARIABLE NUMBER
END FUN_CALCULARJUGADORES;

/

--CABECERA DEL PAQUETE DE PROCEDIMIENTOS Y FUNCIIONES
CREATE OR REPLACE PACKAGE PAQ_PROC_FUN IS
PROCEDURE PROC_REF_EQUIPO(CUR_EQUIPO OUT SYS_REFCURSOR);
PROCEDURE GENERAR_CALENDARIO(FECHA_INICIO_LIGA DATE,P_NOMBRE LIGA.NOMBRE%TYPE);
END PAQ_PROC_FUN;

/

CREATE OR REPLACE PACKAGE BODY PAQ_PROC_FUN IS

PROCEDURE PROC_REF_EQUIPO --PROCEDIMIENTO PARA MOSTRAR LOS EQUIPOS SU DUEÑO Y LA CANTIDAD DE JUGADORES
(CUR_EQUIPO OUT SYS_REFCURSOR) 
IS
 BEGIN      
  OPEN CUR_EQUIPO FOR
    SELECT E.COD_EQUIPO,E.NOMBRE,E.NACIONALIDAD,E.PRESUPUESTO,E.PUNTUACION,E.DUEÑO_COD_DUEÑO"CODIGO_DUEÑO",D.NOMBRE"NOMBRE_DUEÑO",FUN_CALCULARJUGADORES(E.COD_EQUIPO)"NUM_JUGADORES"
    FROM EQUIPO E,DUEÑO D
    WHERE E.DUEÑO_COD_DUEÑO(+)=D.COD_DUEÑO 
    GROUP BY E.COD_EQUIPO, E.NOMBRE, E.NACIONALIDAD, E.PRESUPUESTO, E.PUNTUACION, 
E.DUEÑO_COD_DUEÑO, D.NOMBRE, FUN_CALCULARJUGADORES(E.COD_EQUIPO);
END PROC_REF_EQUIPO;

PROCEDURE GENERAR_CALENDARIO(FECHA_INICIO_LIGA DATE,P_NOMBRE LIGA.NOMBRE%TYPE)
IS 
V_INICIO_JORNADA DATE;
V_FIN_JORNADA DATE;
V_CONTADOR NUMBER := 02;
BEGIN 
    IF FECHA_INICIO_LIGA < SYSDATE THEN
        RAISE_APPLICATION_ERROR(-20008,'LA LIGA NO PUEDE EMPEZAR ANTES DEL DIA DE HOY');
    END IF;
    INSERT INTO LIGA (COD_LIGA,FECHA_INICIO,NOMBRE,ESTADO) VALUES(01,FECHA_INICIO_LIGA,P_NOMBRE,0); --INSERTAMOS LA FECHA DE INICIO DE LA LIGA
    INSERT INTO JORNADA (FECHA_INICIO,LIGA_COD_LIGA) VALUES(FECHA_INICIO_LIGA,01); --INSERTAMOS LA PRIMERA JORANADA
    V_FIN_JORNADA := FECHA_INICIO_LIGA + 3; -- EL FINAL DE JORNADA SERA 3 DIAS DESPUES DEL INICO DE LA JORNADA
    V_INICIO_JORNADA := FECHA_INICIO_LIGA + 7; --LA SIGUIENTE JORNADA SERA 7 DIAS DESPUES DEL FINAL DE LA ANTERIOR JORNADA
    UPDATE JORNADA SET FECHA_FIN = V_FIN_JORNADA WHERE FECHA_INICIO = FECHA_INICIO_LIGA; --HACEMOS UPDATE DEL FIN DE LA JORNADA DEL INICIO DE LA JORNADA QUE VACIA
    LOOP
        INSERT INTO JORNADA (FECHA_INICIO,LIGA_COD_LIGA) VALUES(V_INICIO_JORNADA,01); --INSERTAMOS LA JORNADA X
        V_INICIO_JORNADA:= V_INICIO_JORNADA + 7; --LA SIGUIENTE JORNADA SERA 7 DIAS DESPUES DEL FINAL DE LA ANTERIOR JORNADA
        V_CONTADOR := V_CONTADOR + 1; --SUMAREMOS UNO A NUESTRO CONTADOR HASTA 11, QUE SON LAS JORNADAS QUE HABRA 
        EXIT WHEN V_CONTADOR = 11; --SALDREMOS DEL LOOP CUANDO EL CONTADOR ESTE EN 11
    END LOOP;
        V_CONTADOR:=02;
        V_FIN_JORNADA:= FECHA_INICIO_LIGA + 10; --LA SIGUIENTE JORNADA SERA 7 DIAS DESPUES DEL FINAL DE LA ANTERIOR JORNADA
    LOOP
        UPDATE JORNADA SET FECHA_FIN = V_FIN_JORNADA WHERE COD_JORNADA=V_CONTADOR; --HACEMOS UPDATE DEL FIN DE LA JORNADA DEL INICIO DE LA JORNADA QUE VACIA
        V_FIN_JORNADA:= V_FIN_JORNADA + 7; --LA SIGUIENTE JORNADA SERA 7 DIAS DESPUES DEL FINAL DE LA ANTERIOR JORNADA
        V_CONTADOR := V_CONTADOR + 1; --SUMAREMOS UNO A NUESTRO CONTADOR HASTA 11, QUE SON LAS JORNADAS QUE HABRA 
        EXIT WHEN V_CONTADOR = 11; --SALDREMOS DEL LOOP CUANDO EL CONTADOR ESTE EN 11
    END LOOP;
    UPDATE LIGA SET FECHA_FIN = V_FIN_JORNADA-7; --HACEMOS UPDATE DEL FIN DE LA LIGA QUE ESTA VACIA
END GENERAR_CALENDARIO;
END PAQ_PROC_FUN; 


--SELECT * FROM JORNADA;